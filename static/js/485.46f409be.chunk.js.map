{"version":3,"file":"static/js/485.46f409be.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,oBACkBN,EADlB,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BAC0BN,EAD1B,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CU,IAFhE,cACCP,EADD,yBAIEA,EAASC,MAJX,kE,6IC/BMO,EAAgBC,EAAAA,GAAAA,IAAH,yCAIbC,EAAYD,EAAAA,GAAAA,GAAH,2KAUTE,EAAYF,EAAAA,GAAAA,IAAH,2DAKTG,EAAWH,EAAAA,GAAAA,EAAH,iE,kBCqCrB,EA9Ca,WACX,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,MACGqB,MAAK,SAAAnB,GAAQ,OAAIe,EAAkBf,EAASoB,QAA/B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,UAACd,EAAD,YACE,4CACA,SAACE,EAAD,UACGI,EAAeW,KAAI,SAAAC,GAClB,OACE,SAAC,KAAD,CACEC,GAAE,iBAAYD,EAAME,IAEpBC,MAAO,CAAEC,KAAMd,GAHjB,UAKE,yBACE,UAACL,EAAD,WAC2B,OAAxBe,EAAMK,eACL,gBACEC,IAAG,yCAAoCN,EAAMK,eAC7CE,IAAKP,EAAMQ,MACXA,MAAOR,EAAMQ,SAGf,SAAC,KAAD,CACEF,IAAI,iEACJC,IAAI,aAGR,SAACrB,EAAD,UAAWc,EAAMQ,cAjBhBR,EAAME,GAsBhB,QAIR,C,qQCtDYO,EAAa1B,EAAAA,GAAAA,KAAH,2IAQV2B,EAAQ3B,EAAAA,GAAAA,MAAH,0DAIL4B,EAAe5B,EAAAA,GAAAA,OAAH,wLASZ6B,EAAkB7B,EAAAA,GAAAA,IAAH,yCAIfC,EAAYD,EAAAA,GAAAA,GAAH,2KAUTE,EAAYF,EAAAA,GAAAA,IAAH,sBAET8B,EAAW9B,EAAAA,GAAAA,IAAH,2DAKRG,EAAWH,EAAAA,GAAAA,EAAH,iF","sources":["components/Services/Api.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c507087864cb411db64415ec97acb434';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieById(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovie(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data;\n}\n","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  margin: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 25px;\n  list-style: none;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.div`\n  width: 300px;\n  height: 200px;\n`;\n\nexport const FilmName = styled.p`\n  padding: 10px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { getTrendingMovies } from 'components/Services/Api';\nimport {\n  MovieList,\n  MovieItem,\n  HomeContainer,\n  FilmName,\n} from '../Home/Home.styled';\nimport { MovieImg } from 'pages/Movies/Movies.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrandingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(response => setTrandingMovies(response.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <HomeContainer>\n      <h1>Trending Today</h1>\n      <MovieList>\n        {trendingMovies.map(movie => {\n          return (\n            <Link\n              to={`movies/${movie.id}`}\n              key={movie.id}\n              state={{ from: location }}\n            >\n              <li>\n                <MovieItem>\n                  {movie.backdrop_path !== null ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300${movie.backdrop_path}`}\n                      alt={movie.title}\n                      title={movie.title}\n                    />\n                  ) : (\n                    <MovieImg\n                      src=\"https://cdn.icon-icons.com/icons2/1674/PNG/512/film_110981.png\"\n                      alt=\"default\"\n                    />\n                  )}\n                  <FilmName>{movie.title}</FilmName>\n                </MovieItem>\n              </li>\n            </Link>\n          );\n        })}\n      </MovieList>\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  width: 250px;\n`;\nexport const SearchButton = styled.button`\n  height: 30px;\n  :hover {\n    background-color: green;\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const MoviesContainer = styled.div`\n  margin: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 25px;\n  list-style: none;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.div``;\n\nexport const MovieImg = styled.img`\n  height: 169px;\n  width: 300px;\n`;\n\nexport const FilmName = styled.p`\n  padding: 10px;\n  text-align: center;\n  width: 300px;\n`;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMovieById","movieId","getMovieCredits","getMovieReviews","getSearchMovie","query","HomeContainer","styled","MovieList","MovieItem","FilmName","useState","trendingMovies","setTrandingMovies","location","useLocation","useEffect","then","results","catch","error","console","log","map","movie","to","id","state","from","backdrop_path","src","alt","title","SearchForm","Input","SearchButton","MoviesContainer","MovieImg"],"sourceRoot":""}