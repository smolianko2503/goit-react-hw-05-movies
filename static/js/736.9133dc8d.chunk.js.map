{"version":3,"file":"static/js/736.9133dc8d.chunk.js","mappings":"sOAEaA,E,OAAWC,GAAAA,GAAH,sJ,SCqCrB,EAjCa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAAQ,OAAIN,EAAYM,EAASC,KAAzB,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,SAACL,EAAD,UACGG,EAASa,KAAI,SAAAC,GACZ,OACE,2BACE,gBACEC,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cACvC,+DAENC,MAAM,MACNC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,uCAAeL,EAAKM,eAXbN,EAAKO,GAcjB,KAGN,C,+LCnCKC,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACChB,EADD,yBAIEA,EAASmB,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,uFACkBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,oBACkBqB,EADlB,oBADlB,cACChB,EADD,yBAIEA,EAASmB,MAJX,kEAOA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACkBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BAC0BqB,EAD1B,oBADlB,cACChB,EADD,yBAIEA,EAASmB,MAJX,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+B1B,GAA/B,uFACkBuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDpB,EADC,4BAC0BqB,EAD1B,oBADlB,cACChB,EADD,yBAIEA,EAASmB,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,iCAC8CO,IAFhE,cACCvB,EADD,yBAIEA,EAASmB,MAJX,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 25px;\n  gap: 15px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getMovieCredits } from 'components/Services/Api';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [dataCast, setDataCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => setDataCast(response.cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {dataCast.map(item => {\n        return (\n          <li key={item.id}>\n            <img\n              src={\n                item.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                  : 'https://irc-volvol.info-gkh.com.ua/assets/images/noimage.png'\n              }\n              width=\"240\"\n              alt={item.name}\n            />\n            <p>{item.name}</p>\n            <p>Character: {item.character}</p>\n          </li>\n        );\n      })}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c507087864cb411db64415ec97acb434';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieById(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getSearchMovie(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data;\n}\n"],"names":["CastList","styled","useState","dataCast","setDataCast","movieId","useParams","useEffect","getMovieCredits","then","response","cast","catch","error","console","log","map","item","src","profile_path","width","alt","name","character","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}